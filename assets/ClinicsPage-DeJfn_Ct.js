import{d as D,r as m,T as y,o as E,U as T,c as N,b as l,g,u as $,D as F,I as Z,V as L,F as R,e as S,W as U,f as q,a as v,X as z,k as H,w as j,t as w,Y as O,_ as W}from"./index-DycntCzN.js";const X={class:"clinics-wrapper"},Y={class:"form-map-wrapper"},G={class:"input-wrapper"},J={class:"input-fields"},K={class:"map-wrapper"},Q={class:"results-wrapper"},ss={class:"name"},ts={class:"address ps"},es=D({__name:"ClinicsPage",props:{location:{type:String}},setup(k){const f=k,M=void 0,a=m(y.value),h=(t,s=300)=>{let o;return function(...e){clearTimeout(o),o=setTimeout(()=>t.apply(this,e),s)}},V=async t=>(await O.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${t}&key=${M}`)).data.results[0].geometry.location,B=async t=>{if(t.length<5)return;let{lat:s,lng:o}=await V(t);const e=8;a.value=a.value.filter(n=>{const i=u(s,o,Number(n.lat),Number(n.long));return console.log(i),i<=e}).sort((n,i)=>{const c=u(s,o,Number(n.lat),Number(n.long)),d=u(s,o,Number(i.lat),Number(i.long));return c-d}),console.log(a.value)},I=t=>{a.value=a.value.filter(o=>{const e=u(t.lat,t.lng,Number(o.lat),Number(o.long));return console.log(e),e<=1.6})};function u(t,s,o,e){function n(A){return A*(Math.PI/180)}const i=6371,c=n(o-t),d=n(e-s),b=Math.sin(c/2)*Math.sin(c/2)+Math.cos(n(t))*Math.cos(n(o))*Math.sin(d/2)*Math.sin(d/2),x=2*Math.atan2(Math.sqrt(b),Math.sqrt(1-b));return i*x}const P=h(async t=>await B(t),400),_=t=>{t=="All Clinics"?a.value=y.value:t=="Nearest"?navigator.geolocation&&navigator.geolocation.getCurrentPosition(s=>{let o={lat:s.coords.latitude,lng:s.coords.longitude};I(o)}):t&&(a.value=U[t])},r=m(f.location||"All Clinics"),p=m(""),C=()=>{console.log(r.value),_(r.value),P(p.value)};return E(async()=>{await T(),_(r.value)}),(t,s)=>{const o=q("router-link");return v(),N("div",X,[s[7]||(s[7]=l("h1",null,"locate your closest clinic",-1)),l("div",Y,[l("div",G,[l("div",J,[g(F,{background:"#C7E3E8",placeHolder:"Borough",list:["All Clinics",...$(z)],onInput:s[0]||(s[0]=e=>C()),modelValue:r.value,"onUpdate:modelValue":s[1]||(s[1]=e=>r.value=e),default:f.location||"All Clinics"},null,8,["list","modelValue","default"]),g(Z,{background:"#C7E3E8",placeHolder:"Zip Code",onInput:s[2]||(s[2]=e=>C()),modelValue:p.value,"onUpdate:modelValue":s[3]||(s[3]=e=>p.value=e),numbersOnly:""},null,8,["modelValue"])]),s[4]||(s[4]=l("h2",{class:"desktop"},"Results",-1))]),l("div",K,[g(L,{zoom:9.8,positions:a.value},null,8,["positions"])]),s[5]||(s[5]=l("h2",{class:"mobile"},"Results",-1))]),l("div",Q,[(v(!0),N(R,null,S(a.value,(e,n)=>(v(),H(o,{to:`/clinic/${e.id.toString()}`,class:"single-result"},{default:j(()=>[l("span",ss,w(e.name),1),s[6]||(s[6]=l("br",null,null,-1)),l("span",ts,w(e.street_address),1)]),_:2},1032,["to"]))),256))])])}}}),ls=W(es,[["__scopeId","data-v-015c6a42"]]);export{ls as default};
